@model PizzaAppOnion.Contracts.ViewModels.Order.OrderDetailsViewModel

@{
    ViewData["Title"] = "CreateOrder";
}

<h1>CreateOrder</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateOrder">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"hidden></label>
                <input asp-for="Id" class="form-control"hidden />
                <span asp-validation-for="Id" class="text-danger"hidden></span>
            </div>
            <div class="form-group">
                <label asp-for="PizzaId" class="control-label"></label>
                <select asp-for="PizzaId" asp-items="@(new SelectList(ViewBag.Pizzas, "Id", "PizzaName"))" class="form-control"></select>
                <span asp-validation-for="PizzaId" class="text-danger"></span>
                <label asp-for="PizzaId" class="control-label"></label>
                @Html.ListBoxFor(x => x.PizzaId, new SelectList(ViewBag.Pizzas, "Id", "PizzaName"))
@*                <select asp-for="PizzaId" asp-items="@(new SelectList(ViewBag.Pizzas, "Id", "Name"))" class="form-control"></select>
*@                
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDelivered" /> @Html.DisplayNameFor(model => model.IsDelivered)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
